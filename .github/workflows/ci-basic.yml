# .github/workflows/ci-docker.yml
name: CI · lint · test · docker · deploy

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_run:
    workflows: [ "CI · lint · test · docker · deploy" ]
    types: [ completed ]

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  # ───────────────────────────────────────────────────────────────────────
  # 1) Lint
  # ───────────────────────────────────────────────────────────────────────
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Ruff
        run: python -m pip install --quiet ruff
      - name: Run Ruff
        run: ruff check .

  # ───────────────────────────────────────────────────────────────────────
  # 2) Test (depends on lint)
  # ───────────────────────────────────────────────────────────────────────
  test:
    needs: lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}-${{ runner.os }}-${{ github.run_id }}
      - name: Install dependencies + pytest
        run: |
          python -m pip install --quiet -r requirements.txt pytest
      - name: Run tests
        run: pytest -q

  # ───────────────────────────────────────────────────────────────────────
  # 3) Build & Push Docker (only on push to main)
  # ───────────────────────────────────────────────────────────────────────
  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      # Enable QEMU emulation for ARM builds
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}

      # Compute lower-case repo name once
      - id: prep
        run: echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      # Build & push multi-arch image
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ steps.prep.outputs.repo }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ steps.prep.outputs.repo }}:latest
          cache-from: type=gha
          cache-to:   type=gha,mode=max

  # ───────────────────────────────────────────────────────────────────────
  # 4) Deploy to Fly.io (when docker job finishes successfully)
  # ───────────────────────────────────────────────────────────────────────
  deploy:
    if:   github.event_name == 'workflow_run' &&
          github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.name == 'CI · lint · test · docker · deploy'
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Deploy to Fly
        run: flyctl deploy --image ${{ env.REGISTRY }}/${{ github.repository }}:latest
        env:
          FLY_API_TOKEN: ${{ secrets.GHCR_TOKEN }}
